#!/bin/sh

shiny=false
female=false

odd_minute=$(date +'%M\%2' | xargs calc | tr -d '[:space:]')
if [ "$odd_minute" = 1 ]; then
	shiny=true
fi

while getopts "sf" opt; do
	case $opt in
	s)
		shiny=true
		;;
	f)
		female=true
		;;
	\?)
		echo "Invalid option: -$OPTARG" >&2
		exit 1
		;;
	esac
done

shift $((OPTIND - 1))
path=$1

# 检查路径参数是否为空
if [ -z "$path" ]; then
	echo "Error: Path argument is required."
	exit 1
fi

# 检查路径参数是否exist
if ! [ -d "$path"/pokemon-gen8 ]; then
	echo "Error: Path"
	exit 1
fi
cd "$path" || exit 1

DATE=$(date +'%H*30+%M//2' | xargs calc | tr -d '[:space:]')
if [ "$DATE" = 0 ]; then
	DATE=720
fi

POKEMON_JSON=$(jq --compact-output '.[] | { id: .idx, chs:.name.chs, slug: .slug.eng }' <./data/pokemon.json)

row=$(echo "$POKEMON_JSON" | sed -n "$DATE"p)

SLUG=$(echo "$row" | jq --raw-output '.slug')
NAME=$(echo "$row" | jq --raw-output '.chs')
# DEX_NUMBER=$(echo "$row" | jq --raw-output '.id')

findpath="./pokemon-gen8/regular"
if $shiny; then
	findpath="./pokemon-gen8/shiny"
fi
if $female; then
	SPRITE=$(find "$findpath"/female -maxdepth 1 -type f -name "${SLUG}*")
	if [ -z "$SPRITE" ]; then
		SPRITE=$(find "$findpath" -maxdepth 1 -type f -name "${SLUG}*")
	fi
else
	SPRITE=$(find "$findpath" -maxdepth 1 -type f -name "${SLUG}*")
fi

for i in $SPRITE; do
	echo "$i"
	convert -trim "$i" "$XDG_RUNTIME_DIR"/pokemon.png
	# chafa $i
	catimg "$XDG_RUNTIME_DIR"/pokemon.png
done

echo "$NAME" >"$XDG_RUNTIME_DIR"/pokemon
